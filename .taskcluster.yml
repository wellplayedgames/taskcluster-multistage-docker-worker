version: 1
policy:
  pullRequests: public
tasks:
  $if: taskcluster_root_url == "https://taskcluster.internal.wpgapi.uk"
  then:
    $let:
      repo: https://github.com/wellplayedgames/taskcluster-multistage-docker-worker
      imageName: gcr.io/wpg-internal/taskcluster-multistage-docker-worker
    in:
      - $if: (tasks_for == "github-push") && (event.ref == "refs/heads/main")
        then:
          taskId:
            $eval: as_slugid("push_task")
          created: { $fromNow: '' }
          deadline: { $fromNow: '3 hours' }
          expires: { $fromNow: '10 days' }
          provisionerId: shared
          workerType: multistage-docker
          scopes:
            - secrets:get:shared/github
            - secrets:get:shared/cloudbuild-service-account
          routes:
            - notify.slack-channel.C9Z43K24F.on-any
          payload:
            steps:
              $flatten:
                - image: gcr.io/wpg-internal/ci-bootstrap
                - image: bitnami/git
                  command: ["/bin/bash", "-c"]
                  args:
                  - git clone ${repo} . && git checkout ${event.after}
                - image: docker
                  args: [ "build", ".", "-t", { $eval: imageName } ]
                - image: docker
                  args: [ "push", { $eval: imageName } ]
          metadata:
            name: 'Build multistage-docker-worker'
            description: 'Build & push multistage-docker-worker'
            owner: '${event.sender.login}@users.noreply.github.com'
            source: '${event.repository.url}'
      - $if: (tasks_for == "github-pull-request") && event["action"] in ["opened", "reopened", "synchronize"]
        then:
          taskId:
            $eval: as_slugid("pr_task")
          created: { $fromNow: '' }
          deadline: { $fromNow: '3 hours' }
          expires: { $fromNow: '3 days' }
          provisionerId: shared
          workerType: multistage-docker
          scopes:
            - secrets:get:shared/github
          payload:
            steps:
              - image: gcr.io/wpg-internal/ci-bootstrap
              - image: bitnami/git
                command: ["/bin/bash", "-c"]
                args:
                  - |
                    git clone ${repo} .
                    && git checkout ${event.pull_request.head.sha}
                    && git rebase ${event.pull_request.base.sha}
              - image: docker
                args: [ "build", ".", "-t", { $eval: imageName } ]
          metadata:
            name: 'PR test multistage-docker-worker'
            description: 'Test multistage-docker-worker for a PR'
            owner: '${event.sender.login}@users.noreply.github.com'
            source: '${event.repository.url}'
